<?php

namespace App\Http\Controllers;
use Illuminate\Support\Facades\Auth;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use App\Models\User;
use App\Models\UserActivity;
use Illuminate\Support\Facades\DB;
use Carbon\Carbon;

class HomeController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    // public function __construct()
    // {
    //     $this->middleware('auth');
    // }

    /**
     * Show the application dashboard.
     *
     * @return \Illuminate\Contracts\Support\Renderable
     */
    public function index()
    {

        // $employee = Auth::user(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        // dd(session('seller_id'));
        // $seller_ids = session('seller_id');  // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ seller_id ‡∏à‡∏≤‡∏Å session
        // dd($seller_ids);
         // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• activities ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á employee
        //  $activities = UserActivity::with('employee')->get();

        $employee = Auth::guard('employee')->user(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• employee ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
        
        // üîç Log ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà laravel.log
        Log::info('User Logged In:', ['employee' => $employee]);
        // üîç Debug ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
        //  dd($employee); // ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á user ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏¢‡∏∏‡∏î execution

        $totalUsers = User::count(); // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô user ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        $totalSales = DB::table('ordersexample')
        ->where('status', 'Completed') // ‡∏ô‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
        ->sum('FinalAmount'); // ‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏à‡∏≤‡∏Å FinalAmount

        // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 'Completed'
        $completedOrdersCount = DB::table('ordersexample')
        ->where('status', 'Completed')
        ->count(); // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç

        // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 'Completed'
        $totalSeller = DB::table('sellers') // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô seller ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ->count(); // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç

        // Query to get sales per week where status is 'Completed'
        $salesData = DB::table('ordersexample')
            ->select(DB::raw('WEEK(CreatedAt) as week_number, SUM(FinalAmount) as total_sales'))
            ->where('Status', 'Completed')
            ->groupBy(DB::raw('WEEK(CreatedAt)'))
            ->orderBy('week_number', 'asc')
            ->get();

             // ‡πÅ‡∏õ‡∏•‡∏á salesData ‡πÄ‡∏õ‡πá‡∏ô array
            // $salesData = $salesData->toArray();

            $salesData = $salesData->map(function($item) {
                return (object)[
                    'week_number' => $item->week_number,
                    'total_sales' => (float)$item->total_sales
                ];
            })->toArray();

            Log::info('Log salesData In:', ['salesData' => $salesData]);

            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏® ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Completed
            $salesByCountry = DB::table('ordersexample')
                ->select('Country', DB::raw('SUM(FinalAmount) as total_sales'))
                ->where('Status', 'Completed')
                ->groupBy('Country')
                ->get();

            // ‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô 0
            $countries = ['Thailand', 'USA', 'Japan', 'Germany']; // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®
            $salesByCountryData = [];
            foreach ($countries as $country) {
                $sales = $salesByCountry->firstWhere('Country', $country);
                $salesByCountryData[] = [
                    'country' => $country,
                    'total_sales' => $sales ? $sales->total_sales : 0
                ];
            }

            // ‡∏î‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            $currentDate = Carbon::now();
            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
            $lastMonthStart = $currentDate->copy()->subMonth()->startOfMonth();
            $lastMonthEnd = $currentDate->copy()->subMonth()->endOfMonth();

            // ‡∏î‡∏∂‡∏á‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
            $lastMonthSales = DB::table('ordersexample')
                ->where('Status', 'Completed')
                ->whereBetween('CreatedAt', [$lastMonthStart, $lastMonthEnd])
                ->select(DB::raw('DAY(CreatedAt) as day, SUM(FinalAmount) as total_sales'))
                ->groupBy(DB::raw('DAY(CreatedAt)'))
                ->orderBy('day', 'asc')
                ->get();

                 // ‡∏î‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                $currentDate = Carbon::now();
                
                // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå) ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå) ‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
                $lastWeekStart = $currentDate->copy()->subWeek()->startOfWeek();
                $lastWeekEnd = $currentDate->copy()->subWeek()->endOfWeek();

                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
                $lastWeekSales = DB::table('ordersexample')
                    ->where('Status', 'Completed')
                    ->whereBetween('CreatedAt', [$lastWeekStart, $lastWeekEnd])
                    ->select(DB::raw('DAYOFWEEK(CreatedAt) as day_of_week, SUM(FinalAmount) as total_sales'))
                    ->groupBy(DB::raw('DAYOFWEEK(CreatedAt)'))
                    ->orderBy('day_of_week', 'asc')
                    ->get();
            
                // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 'Completed'
                // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å users table
                $dataAllusers = DB::table('users')->get();

                $products = DB::table('products')->orderBy('id', 'desc')->limit(5)->get();

                $activities = UserActivity::latest()->limit(10)->get();
                // dd($activities);  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
                // return view('home', compact('activities'));


                // ->count(); // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç

        // $employee = Auth::user(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
        return view('home', compact('employee', 'totalUsers', 'totalSales', 'completedOrdersCount', 'totalSeller', 'salesData','salesByCountryData', 'lastMonthSales', 'lastWeekSales','dataAllusers', 'products', 'activities'));

        // return view('home', compact('employee'));
    }

    // public function totalUsers()
    // {
    //     $totalUsers = User::count(); // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô users ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    //     return view('home', compact('employee', 'totalUsers'));
    // }

}
